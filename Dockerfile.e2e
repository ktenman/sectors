# --- Build stage ---
# This stage builds the frontend and backend
# It uses a multi-stage build to avoid having to install node and npm in the final image
# It also uses a multi-stage build to avoid having to install gradle in the final image
# The final image is based on a slim version of the Liberica JDK

# --- Frontend build stage ---
FROM node:21-slim as frontend-build

WORKDIR /app
COPY ui/ ui/
COPY tsconfig.json tsconfig.node.json vite.config.ts vite-env.d.ts package.json package-lock.json ./

RUN npm ci
RUN npm run build

# --- Backend build stage ---
FROM gradle:jdk21 as backend-build

WORKDIR /app
COPY . .

RUN ./gradlew clean build -x test

# --- Final image ---
FROM bellsoft/liberica-runtime-container:jdk-21-slim-musl

WORKDIR /app

COPY --from=frontend-build /app/dist/ public/
COPY --from=backend-build /app/build/libs/*.jar /app/app.jar

CMD ["sh", "-c", "java $JAVA_OPTS -Dserver.port=$TEST_SERVER_PORT -jar /app/app.jar"]
